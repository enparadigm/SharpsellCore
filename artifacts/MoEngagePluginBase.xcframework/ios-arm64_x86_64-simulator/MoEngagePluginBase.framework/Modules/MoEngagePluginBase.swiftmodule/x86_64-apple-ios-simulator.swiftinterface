// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target x86_64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name MoEngagePluginBase
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import MoEngageInApps
@_exported import MoEngagePluginBase
import MoEngageSDK
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @available(iOSApplicationExtension, unavailable)
@objc final public class MoEngagePlugin : ObjectiveC.NSObject {
  @objc final public func initializeDefaultInstance(sdkConfig: MoEngageCore.MoEngageSDKConfig, sdkState: MoEngageCore.MoEngageSDKState, launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]? = nil)
  @objc final public func initializeDefaultInstance(sdkConfig: MoEngageCore.MoEngageSDKConfig, launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]? = nil)
  @objc final public func initializeInstance(sdkConfig: MoEngageCore.MoEngageSDKConfig, sdkState: MoEngageCore.MoEngageSDKState, launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]? = nil)
  @objc final public func initializeInstance(sdkConfig: MoEngageCore.MoEngageSDKConfig, launchOptions: [UIKit.UIApplication.LaunchOptionsKey : Any]? = nil)
  @objc final public func trackPluginInfo(_ pluginType: Swift.String, version: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
public protocol MoEngagePluginBaseProtocol {
  static func initializePluginBridge()
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOSApplicationExtension, unavailable)
@objc final public class MoEngagePluginBridge : ObjectiveC.NSObject {
  @objc public static let sharedInstance: MoEngagePluginBase.MoEngagePluginBridge
  @objc final public func pluginInitialized(_ accountInfo: [Swift.String : Any])
  @objc final public func setPluginBridgeDelegate(_ delegate: any MoEngagePluginBase.MoEngagePluginBridgeDelegate, identifier: Swift.String)
  @objc final public func setPluginBridgeDelegate(_ delegate: any MoEngagePluginBase.MoEngagePluginBridgeDelegate, payload: [Swift.String : Any])
  @objc final public func updateSDKState(_ sdkState: [Swift.String : Any])
  @objc final public func optOutDataTracking(_ dataTrack: [Swift.String : Any])
  @objc final public func setAppStatus(_ appStatus: [Swift.String : Any])
  @objc final public func setAlias(_ alias: [Swift.String : Any])
  @objc final public func setUserAttribute(_ userAttribute: [Swift.String : Any])
  @objc final public func trackEvent(_ eventAttribute: [Swift.String : Any])
  @objc final public func resetUser(_ userAttribute: [Swift.String : Any])
  @objc final public func showInApp(_ inApp: [Swift.String : Any])
  @objc final public func showNudge(_ inApp: [Swift.String : Any])
  @objc final public func getSelfHandledInApp(_ inApp: [Swift.String : Any])
  @objc final public func setInAppContext(_ context: [Swift.String : Any])
  @objc final public func resetInAppContext(_ context: [Swift.String : Any])
  @objc final public func updateSelfHandledImpression(_ inApp: [Swift.String : Any])
  @objc final public func registerForPush()
  @objc final public func validateSDKVersion() -> Swift.Bool
  @objc deinit
}
public struct MoEngagePluginConstants {
  public struct General {
    public static let accountMeta: Swift.String
    public static let data: Swift.String
    public static let campaignId: Swift.String
    public static let platform: Swift.String
    public static let iOS: Swift.String
    public static let kvPair: Swift.String
    public static let value: Swift.String
    public static let navigation: Swift.String
    public static let payload: Swift.String
    public static let navigationType: Swift.String
    public static let actionType: Swift.String
    public static let type: Swift.String
  }
  public struct UserAttribute {
    public static let type: Swift.String
    public static let attributeName: Swift.String
    public static let attributeValue: Swift.String
    public static let locationAttribute: Swift.String
    public static let latitude: Swift.String
    public static let longitude: Swift.String
    public static let general: Swift.String
    public static let timestamp: Swift.String
    public static let location: Swift.String
  }
  public struct SDKState {
    public static let isSdkEnabled: Swift.String
    public static let state: Swift.String
    public static let data: Swift.String
  }
  public struct InApp {
    public static let contexts: Swift.String
    public static let impression: Swift.String
    public static let click: Swift.String
    public static let dismissed: Swift.String
    public static let campaignContext: Swift.String
    public static let selfHandled: Swift.String
    public static let customAction: Swift.String
  }
  public struct CallBackEvents {
    public static let inAppShown: Swift.String
    public static let inAppDismissed: Swift.String
    public static let inAppClicked: Swift.String
    public static let inAppCustomAction: Swift.String
    public static let inAppSelfHandled: Swift.String
    public static let pushTokenGenerated: Swift.String
    public static let pushClicked: Swift.String
  }
}
@objc public protocol MoEngagePluginBridgeDelegate {
  @objc func sendMessage(event: Swift.String, message: [Swift.String : Any])
}
@_hasMissingDesignatedInitializers public class MoEngagePluginUtils {
  public static func fetchIdentifierFromPayload(attribute: [Swift.String : Any]) -> Swift.String?
  public static func createAccountPayload(identifier: Swift.String) -> [Swift.String : Any]
  @objc deinit
}
