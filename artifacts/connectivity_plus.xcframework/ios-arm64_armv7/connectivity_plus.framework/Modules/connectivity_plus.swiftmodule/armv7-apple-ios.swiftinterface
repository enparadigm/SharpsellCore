// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target armv7-apple-ios9.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name connectivity_plus
import Flutter
import Foundation
import Reachability
import Swift
import _Concurrency
@_exported import connectivity_plus
public enum ConnectivityType {
  case none
  case wiredEthernet
  case wifi
  case cellular
  public static func == (a: connectivity_plus.ConnectivityType, b: connectivity_plus.ConnectivityType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public protocol ConnectivityProvider : ObjectiveC.NSObjectProtocol {
  typealias ConnectivityUpdateHandler = (connectivity_plus.ConnectivityType) -> Swift.Void
  var currentConnectivityType: connectivity_plus.ConnectivityType { get }
  var connectivityUpdateHandler: Self.ConnectivityUpdateHandler? { get set }
  func start()
  func stop()
}
@objc @_inheritsConvenienceInitializers public class ReachabilityConnectivityProvider : ObjectiveC.NSObject, connectivity_plus.ConnectivityProvider {
  public var currentConnectivityType: connectivity_plus.ConnectivityType {
    get
  }
  public var connectivityUpdateHandler: connectivity_plus.ReachabilityConnectivityProvider.ConnectivityUpdateHandler?
  public func start()
  public func stop()
  @objc override dynamic public init()
  @objc deinit
}
@objc @_hasMissingDesignatedInitializers public class SwiftConnectivityPlusPlugin : ObjectiveC.NSObject, Flutter.FlutterPlugin, Flutter.FlutterStreamHandler {
  @objc public static func register(with registrar: Flutter.FlutterPluginRegistrar)
  @objc public func handle(_ call: Flutter.FlutterMethodCall, result: @escaping Flutter.FlutterResult)
  @objc public func onListen(withArguments _: Any?, eventSink events: @escaping Flutter.FlutterEventSink) -> Flutter.FlutterError?
  @objc public func onCancel(withArguments _: Any?) -> Flutter.FlutterError?
  @objc deinit
}
extension connectivity_plus.ConnectivityType : Swift.Equatable {}
extension connectivity_plus.ConnectivityType : Swift.Hashable {}
